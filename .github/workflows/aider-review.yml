name: Aider PR Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Aider and GitHub CLI
        run: |
          python -m pip install --upgrade pip
          pip install aider-chat openai

      - name: Configure GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Get PR diff and create review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the diff
          git fetch origin ${{ github.base_ref }}
          git diff origin/${{ github.base_ref }}...HEAD > pr_diff.txt
          
          # Create a message file for aider
          cat > message.txt << 'EOF'
          Please review this PR diff and provide feedback. Start your response with "REVIEW_START" and use this format:

          REVIEW_START
          ### Code Quality
          - [quality points]

          ### Potential Bugs
          - [bug points]

          ### Suggested Improvements
          - [improvement points]

          ### Security Considerations
          - [security points]

          ### Merge Decision
          [YES/NO] - no explaination needed.
          EOF
          cat pr_diff.txt >> message.txt
          
          # Run aider
          aider --4o \
                --message-file message.txt \
                --no-git \
                --no-auto-commits \
                --yes-always \
                --no-pretty \
                --no-stream \
                --no-check-update > raw_review.txt

          # Extract and format the review using Python
          python3 - << 'EOF' > formatted_review.txt
          import re

          with open('raw_review.txt', 'r') as f:
              content = f.read()

          # Find the review content
          review_match = re.search(r'REVIEW_START\n([\s\S]*?)(?=Tokens:)', content)
          token_match = re.search(r'(Tokens:.*session\.)', content)

          if review_match:
              review_content = review_match.group(1).strip()
              
              # Format the output
              output = ["## AI Code Review\n```"]
              output.append(review_content)
              
              if token_match:
                  output.append(f"\nToken Information:\n{token_match.group(1)}")
              
              output.append("```")
              print("\n".join(output))
          else:
              print("## AI Code Review\n```\nError: Could not find review content\n```")
          EOF
          
          # Post the review as a PR comment
          gh pr comment ${{ github.event.pull_request.number }} --body-file formatted_review.txt
